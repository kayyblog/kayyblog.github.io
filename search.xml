<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>顺序表</title>
    <url>/2019/11/03/%E9%A1%BA%E5%BA%8F%E8%A1%A8/</url>
    <content><![CDATA[<p><img src="http://tva1.sinaimg.cn/large/007X8olVly1g8l42g9zk7j31am0kmq3b.jpg" alt="avatar"></p>
<p>也可以用 length 记录线性表的长度</p>
<a id="more"></a>

<h5 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h5><p>在内存上顺序储存，</p>
<p>可以随机访问顺序表上的数据</p>
<h5 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h5><p>在使用前必须提前确定数组最大容量（浪费空间）</p>
<p>插入删除不方便，平均复杂度为2/Maxsize</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="comment">//线性表顺序储存的作用，产生一段在内存中连续储存的表</span></span><br><span class="line">    <span class="comment">//优点，相对于数组，可以进行插入删除打印操作；作为数组可以通过下标直接访问数组某个元素的值</span></span><br><span class="line">    <span class="comment">//缺点，相对于线性表链式结构（链表），必须提前声明数组大小，可能会浪费内存</span></span><br><span class="line">    <span class="comment">//这两点可以概括到线性表的所有数据结构类型中，也是数组和链表这两个基础储存方式的存在意义#include"stdio.h"</span></span><br><span class="line">    <span class="comment">/*将数据储存在数组中，一个线性表是一个结构体，每个结构体中包含last，作为当前最后一个元素的坐标，last+1是长度，或者在结构体中定义length*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"stdlib.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Maxsize 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">xianxingbiao</span>       </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">/* data */</span></span><br><span class="line">    <span class="keyword">int</span> Data[Maxsize];     </span><br><span class="line">    <span class="keyword">int</span> last;</span><br><span class="line">&#125;*List;</span><br><span class="line"><span class="function">List <span class="title">init_S</span><span class="params">(<span class="keyword">void</span>)</span>		<span class="comment">//初始化过程</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List PL;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    PL=(List)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(List));</span><br><span class="line">    PL-&gt;last=<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;PL-&gt;Data[i]);</span><br><span class="line">    <span class="keyword">if</span>(PL-&gt;last&lt;Maxsize<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(PL-&gt;Data[i]!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;PL-&gt;Data[i]);		</span><br><span class="line">            PL-&gt;last++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> PL;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function">List <span class="title">insert_S</span><span class="params">(List PL,<span class="keyword">int</span> i,<span class="keyword">int</span> n)</span><span class="comment">//插入（参数分别为  插入顺序表 插入值 插入位置）</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">if</span>(PL-&gt;last+<span class="number">1</span>&lt;Maxsize)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=PL-&gt;last;j&gt;i;j--)</span><br><span class="line">        &#123;</span><br><span class="line">            PL-&gt;Data[j+<span class="number">1</span>]=PL-&gt;Data[j];</span><br><span class="line">        &#125;</span><br><span class="line">        PL-&gt;Data[i]=n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"顺序表已满\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> PL;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> PL;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">List <span class="title">Delete</span><span class="params">(List PL)</span> <span class="comment">//删除操作</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"删除开始\n"</span>);</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;num);</span><br><span class="line">    <span class="keyword">if</span>(PL-&gt;last==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"当前为空顺序表\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> PL;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(PL-&gt;Data[i]!=num)</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> j=PL-&gt;last;</span><br><span class="line">        <span class="keyword">for</span>(;i&lt;=j;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            PL-&gt;Data[i]=PL-&gt;Data[i+<span class="number">1</span>];  </span><br><span class="line">        &#125;</span><br><span class="line">        PL-&gt;last--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> PL;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Output</span><span class="params">(List PL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;PL-&gt;last;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,PL-&gt;Data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List PL;</span><br><span class="line">    <span class="keyword">int</span> n,x;</span><br><span class="line">    PL = init_S();  <span class="comment">//初始化</span></span><br><span class="line">    Output(PL); 	<span class="comment">//输出已经初始化的顺序表</span></span><br><span class="line">    <span class="keyword">int</span> i;			</span><br><span class="line">    PL = Delete(PL,i);<span class="comment">//删除第i个元素</span></span><br><span class="line">    Output(PL);		<span class="comment">//输出删除后的元素</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>文字</category>
      </categories>
      <tags>
        <tag>c语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo创建多个标签</title>
    <url>/2019/10/31/Hexo%E5%88%9B%E5%BB%BA%E5%A4%9A%E4%B8%AA%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h2 id="创建单个标签"><a href="#创建单个标签" class="headerlink" title="创建单个标签"></a>创建单个标签</h2><p>在不断尝试后，终于知道怎么创建多个标签了。</p>
<p>首先需要确认在你的hexo主目录下_config.yml里面 tags是开着的（创建多个categories的方法和tags相同）</p>
<p><img src="http://tva1.sinaimg.cn/large/007X8olVly1g8hl5ot3a1j30b70540ss.jpg" alt="avatar"></p>
<a id="more"></a>

<p>在命令行输入</p>
<p><img src="http://tva1.sinaimg.cn/large/007X8olVly1g8hliio47mj30xz0hrdge.jpg" alt="avatar"></p>
<p>会在blog/source文件夹内创建一个文件夹，名为tags</p>
<p>打开里面的index.md，修改为如下</p>
<p><img src="http://tva1.sinaimg.cn/large/007X8olVly1g8hlkizhhrj30t40pwq3g.jpg" alt="avatar"></p>
<p><strong>注意title名必须为tags，type名也是</strong></p>
<p>创建完成后</p>
<p>hexo g，</p>
<p>hexo s，</p>
<p>localhost:4000，打开后标签打开后应该是空着的</p>
<p>只有在一个md文件添加了tags后标签页才会显示标签数量。</p>
<p>随便打开一个你source/_posts里的md文件，在上面如下添加tags，归到tags这个标签上( - 后有空格)</p>
<p><img src="http://tva1.sinaimg.cn/large/007X8olVly1g8hlrbzafzj30fx04kmx1.jpg" alt="avatar"></p>
<p>这样再</p>
<p>hexo g</p>
<p>hexo s</p>
<p>localhost:4000</p>
<p>打开标签页面，就会显示</p>
<p><img src="http://tva1.sinaimg.cn/large/007X8olVly1g8hlv1qmg5j30e009cglw.jpg" alt="avatar"></p>
<h2 id="创建多个"><a href="#创建多个" class="headerlink" title="创建多个"></a>创建多个</h2><p>如上，</p>
<p>1.在命令行输入 hexo new page 这是一个标签</p>
<p>2.在source里面会创建一个名为  “这是一个标签”  的文件夹，把里面的index.md像上面一样把type修改为tags，名字可以随意</p>
<p>3.再将source/_posts里面的md文件，tags添加上   - 这是一个标签（和上面方法一样）  （ - 后有空格）</p>
<p>4.打开hexo主页，就可以看到标签页多了一个标签</p>
<p><img src="http://tva1.sinaimg.cn/large/007X8olVly1g8hm9ybuq4j30br09fmxb.jpg" alt="avatar"></p>
]]></content>
      <categories>
        <category>文字</category>
      </categories>
      <tags>
        <tag>tags</tag>
        <tag>踩坑</tag>
      </tags>
  </entry>
</search>
